*放入代码仓库时，变量or代码 <#code#>

*原子属性和非原子属性
   atomic：原子属性  为setter方法加锁，线程安全，耗大量资源
   nonatomic：非原子属性，不为setter方法加锁，非线程安全
   ios开发
     所有属性都声明为nonatomic
     尽量将加锁资源抢夺的业务逻辑交给服务器处理，减小移动客户端的压力

*Foundation:OC框架
 Core Foundation:c语言框架
   两者数据类型可以相互转换。
   例：
      NSString *str = @"123";//Foundation
      CFStringRef str2 = (__bridge CFStringRef)(str);//Core Foundation
                         //桥接（跨框架转换需要桥接）
      //CFArrayRef-NSArray      CFDictionary-NSDictionary    CFNumberRef-NSNumber
    
   CoreFoundation中手动创建的数据类型，都需要手动释放
   例：
     CFArrayRef array = CFArrayCreate(NULL,NULL,10,NULL);
     CFRelease(array);
     
*凡是函数名中带有create/copy/new/retain等字眼，都应该再不需要使用这个数据时进行release
 GCD的数据类型在ARC环境下不需要再做release
 CF（Core Foundation）的数据类型在ARC环境下还是需要再做release
 
*注意：
     1、System样式的按钮无法设置iage，（setImage）
     2、属性名不能以new开头
     3、当前对象self只能在init开肉的构造方法中进行赋值
     
*配合xib的.m文件
 +(instancetype)toolbar{
    return [[[NSBundle mainBundle] loadNibNamed:@"Toolbar" owner:nil option:nil] lastObject];
 }
 控制器里
 Toolbar *tool = [Toolbar toolbar];
 [self.view addSubview:tool];
 增加监听
   1、[tool addGestureRecognizer:[[UITapGestureRecognizer allo] initWithTarget:self action:@selector(tapTool)];
   2、storyboard将手势拖入storyboard中，拖线
   3、拖入xib中，会发生错误:[UITapGestureRecognizer superview]
      分析：
        方法属于谁：UIView
      结论：
        错误将UITapGestureRecognizer当作UIView来使用
        .m改为[..  firstObject]   xib中有多个对象，要分清楚
 
 *xib的加载问题
   控制器默认会自动找对应的xib来创建View
   （顺序从上到下）
  ｜ 1、去掉Controller这个单词后同名的xib
   > 2、完全同名的Xib
   
   修改了xib后，会有缓存，先删除软件，在clean工程
 
