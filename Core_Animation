Core_Animation核心动画
  跨平台 ios, Mac Os
  Core Animation的动画执行过程都是在后台操作，不会阻塞主线程
  Core Animation是直接作用在CALayer上的，并非UIView
  
使用：
 1、现添加QuarzCore.framework框架——引入头文件<QuartzCore/QuarzCore.h>
 2、初始化CAAnimation对象，并设置一些动画相关属性(必须有layer)
 3、通过调用CALayer的addAnimation:  forKey:方法添加到CALayer中，即可开始动画
 4、调用removeAnimationForKey停止动画
 
 //创建动画对象
 CABasicAnimation *anim = [CABasicAnimation animation];
 //设置动画属性
 anim.KeyPath = @"position";
 anim.toValue = [NSValue valueWithCGPoint:CGPointMake(200,200)];
 //取消反弹*******************
 anim.removedOnCompletion = NO;//动画执行后，不移除动画
 anim.fillMode = KCAFillModeForwards;//保持最新位置
 anim.duration = 2;//动画时长
 anim.repeatCount = MAXFLOAT;//重复次数
 //添加动画
 [_layer addAnimation:anim forKey:nil];
 
 路径动画
 CAKeyframeAnimation *anim = [CAKeyframeAnimation animation];
 anim.keyPath = @"position";
 NSValue *v1 = [NSValue valueWithCGPoint:CGPointZero];
 NSValue *v2 = [NSValue valueWithCGPoint:CGPointMake(160,160)];
 NSValue *v3 = [NSValue valueWithCGPoint:CGPointMake(270,0)];
 anim.values = @[v1,v2,v3];
 [_layer addAnimation:anim forKey:nil];
 
 CAKeyframeAnimation
 anim.KeyPath = @"position";
 UIBezierPath *path = [UIBezierPath bezierPathWithOvalInRect:CGRectMake(0,0,200,200)];
 anim.path = path.CGPath;


图标抖动
//长按
UILongPressGestureRecognizer *longPres = [UILongPressGestureRecognizer alloc] initWithTarget:self action:@selector(longPress:)];
[_imageView addGestureRecognizer:longPres];//_imageView需要开启交互功能
-(void)longPress:(UILongPressGestureRecognizer *)longPress{
   if(longPress.state == UIGestureRecognizerStateBegan){//第一次按开始
     CAKeyframeAnimation *anim = [CAKeyframeAnimation animation];
     anim.keyPath = @"transform.rotation";
     anim.values = @[@(..),@(..),@(..)];//@[左转5度，右转5度，再左转5度];
     anim.repeatCount = MAXFLOAT;
     [_imageView.layer addAnimation:anim forKey:nil];
   }
}
//anim.from.value  从...开始
